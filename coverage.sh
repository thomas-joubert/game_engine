#!/bin/bash

#security and error mecanism, stops if a command fails
set -e

SCRIPT_DIR=$(dirname $0)
COV_DIR="coverage_output"
COV_FILE="coverage.info"
RESULTS="output.html"

if [ $# -ne 1 ]; then
    echo -e "USAGE : ./coverage.sh <path_to_build_folder>"
    exit 2
fi

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    echo -e "USAGE : ./coverage.sh <path_to_build_folder>
    This script compiles files generated by gcov, the code coverage tool,
    into an html file in ${SCRIPT_DIR}/${COV_DIR}, then open it in your default browser."

    echo -e "\nexiting..."
    exit 1
fi


if ! [ -d "$1" ]; then
    echo -e "ERROR : "$1" is not a valid directory"

    echo -e "\nexiting..."
    exit 3
fi

if  ! command -v lcov > /dev/null; then
    echo -e "coverage.sh : ERROR : lcov, used to generate human-readable ${COV_FILE}, seems not installed,
    you must install it before being able to go further."
    echo -e "\nexiting..."
    exit 4
fi

echo "$1"

if [ -d "${SCRIPT_DIR}/"${COV_DIR}"" ]; then
    read -p "The ${COV_DIR} directory already exists, do you want to regenerate it ?[Y/n] " -n1 ans

    if [ "${ans}" == "Y" ]; then
        rm -r "${SCRIPT_DIR}/${COV_DIR}"
        echo ""
    else
        echo -e "\nAborting..."
        exit 5
    fi
fi

echo "Creating ${SCRIPT_DIR}/${COV_DIR}..."
mkdir ${SCRIPT_DIR}/"${COV_DIR}"

lcov -d $1 -c -o "${SCRIPT_DIR}/${COV_DIR}/${COV_FILE}"

#filtering out unecessary files
lcov -r "${COV_DIR}/coverage.info" "*Qt*.framework*" "*.h" "*/tests/*" "*Xcode.app*" "*.moc" "*moc_*.cpp" "*/test/*" "*/build*/*" -o "${COV_DIR}/coverage-filtered.info"


# Generate the HTML files
genhtml -o "${SCRIPT_DIR}/${COV_DIR}/${RESULTS}" "${SCRIPT_DIR}/${COV_DIR}/coverage-filtered.info"

# Reset our counts
lcov -d "${COV_DIR}" -z

firefox ${SCRIPT_DIR}/"${COV_DIR}"/output.html
